<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="excluir.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ofdEstoque.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAALEAAACxAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQjUodFU9Kq9lRizFQDMoXwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoKCgTaUktwMZ4OK7FeDexh1gx5VlAJhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDUmIk8+LB0AAAAAQDUrGEw7K5NeQyzLvHI178Z4
        N+zGeDbqvHI2sG1LLtNPOyqkKSkpHwAAAABCOikfRDwrHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA+NClrUj0r3G5LLu1fQy3Bb0su2rRvNdymZzTDcUwup29MLb12UC6gd1AvuZliM4LDdzfVgVUvuFI8
        K6FpSCzgYUQs8kg2K1kAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAhkRizcxng2+MZ4N//GeDfulV4y31U+
        K5A+NCZKMzMzBQAAAAAAAAAAMzMzBSgoKDo4Lyl8h1gxt8d4NrLGeTbLxng3/HlRL+RZQywXAAAAAAAA
        AAAAAAAAAAAAAFU9MRV1Ty7Sxng39MV3N+1oSC3HSDooOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJiYmNWVGLbvDdzauxng4l3xSMMo3LCwXAAAAAAAAAAAAAAAAAAAAAAAAAABcQSzDxng37Fc/
        KrVKOikfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD42JyFuSy7TxHk3rVk/
        LJIAAAAAAAAAAAAAAAAAAAAAAAAAAEQzKC13UC/qiVkyzkk4KkkAAAAAKysrDCw6RUYpNkBQKzhBTiw5
        Q0wqOEJJKzM8WioyOmEqMjtWKysrDAAAAABBMylLll8y7IpZMetFNyklAAAAAAAAAAAAAAAAAAAAAE05
        K7e3cTXnSTgqpQAAAAAAAAABLD1LxDtypaxAicnWP4XC2jdolN84bZryP4jI8UCJxss+f7nzMU1mzQAA
        AAAAAAAAVT0rtLxzNv5UPiutAAAAAAAAAAAAAAAAJiYmKGpILd+paTP4PDEnYgAAAAArKysMN2aOvj+F
        wbY2Y4nUQ5Xa0T6Buvw+gbv/RZvm/0Wb5v9Fm+b/OGyZ2xwcHAkAAAAANy8nYq9sNeJjRSzhISEhFwAA
        AABVPyuWXEEsw8J2N9Z2Ty7RJCQkFQAAAAArKysMN2aPr0ab5rdFm+bTRZvn5T1/uO09gbv9RZvm/kWb
        5v9Fm+b8OnGi5hwcHAkAAAAAIiIiHnVPL7e9dDX4bEou4GFDLIxVPizHxng3/8Z4N/NfQyy/AAAAAAAA
        AAAkJCQHOGiSykGIyNVAisreRZvm9D2Bu/09gLr9RZvm60ab5txFm+b3NmiRzjMzMwUAAAAAAAAAA2FE
        LL7GeDb4xng35FlALLRoSC3Hxng39cZ4N/9nSC3SAAAAAAAAAAAAAAACNmSMx0Wb5u1Fm+b7RZvm9z6B
        u/8+gbz+RZvm6EWb5stFnOa2NmSMzwAAAAEAAAAAAAAAA2tJLcvGeDf6xnc33lE9K8ZeQiuTck0u6L50
        NvZzTi7MJiYmFC4uRgszSlyhNFRw8jxpkPw7bJb/QX+0/z6Bu/8+gbr4OmyW7DxqlPA7a5TfNVNt2Dha
        c6RGdIsLKSkpH39VL9PDdzfXaEgt3EQ3KYMAAAAAJCQkHFM9KsGgZjTBPjMrWkmAtg5CcJbUWbL6+Vix
        +f5Zsvr/TpbQ/zddfvMzUGn7TI/G/Vmy+vxZs/r7WbL6+D1igto3W20ONzAoZq5rNeloSCzbJSUlKQAA
        AAAAAAAAAAAAAFE8Kp69czX0TTkqqgAAAAA8YIBAQHKbykBym9Q9aIzJPGuS2TRQaugxSl3ePmyV3Txo
        jtBCeKPTPWaItDVKWj4AAAAAUTwrrbZwNfVKOSuzAAAAAAAAAAAAAAAAAAAAAE07LyuHVzDhjlsx6z8w
        JUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3LyhGk10y3XZP
        Lu1KMygtAAAAAAAAAAAAAAAAAAAAAAAAAABkRS2mxng35mhILNVcQS4nAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACsgIBhfQyy6xng351hAK7wAAAAAAAAAAAAAAAAAAAAAAAAAACQk
        JBV+UzDMxng3yMJ2N81wTC7jZkUqVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQTIoM2pJ
        LcjFdjfGxng37HFNLtIkJCQOAAAAAAAAAAAAAAAAAAAAAF5MLxtyTS3Qxng38sZ4N+DGdzfelF4x9mZH
        Lr5ZQSxWQEBABAAAAAAAAAAAAAAAAjIqKj1lRy2mmGAy5MZ4N+XGeDf9xng381xCLc5iOycNAAAAAAAA
        AAAAAAAAAAAAAAAAAAA8MydVX0Ms7F5CLMVfQyy0k14y8cR3N/enZzPke1EwzHhQLrtuSy6nfFIvt6hp
        NMS0bjXjdE4t5l9DLMNwSy7wUj0r2kI0KXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkQtIkIx
        KR8AAAAAZ0osNEg4KZtoSC7Jv3Q21sV3NsvFeDf6vHM2+Vk/LMFJOSuPakcyJAAAAABSQikfQjMsIwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZQywXglYw1cV5
        N7rGdzapcU0v1Uo1KxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAakotiU87KaFZPyvJQDMocwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/w/8A/4H/APIATwDgAAcAwBgDAMD/AwDh/4cAwgBDAMQA
        YwCEACEABAAgAAwAIAAMACAAAAAAAIAAAQDEACMAw//DAOH/hwDA/wMAwBgDAOAABwDyAE8A/4H/AP/D
        /wA=
</value>
  </data>
</root>